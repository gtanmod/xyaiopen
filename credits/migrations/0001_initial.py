# Generated by Django 4.2 on 2025-05-12 11:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0013_aimodel_max_context_length_aimodel_supports_audio_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True, verbose_name='配置键')),
                ('value', models.TextField(verbose_name='配置值')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '系统配置',
                'verbose_name_plural': '系统配置列表',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credits', models.IntegerField(default=0, verbose_name='积分')),
                ('last_sign_in', models.DateField(blank=True, null=True, verbose_name='上次签到日期')),
                ('continuous_sign_days', models.IntegerField(default=0, verbose_name='连续签到天数')),
                ('total_sign_days', models.IntegerField(default=0, verbose_name='总签到天数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料列表',
            },
        ),
        migrations.CreateModel(
            name='CreditRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_change', models.IntegerField(verbose_name='积分变动')),
                ('record_type', models.CharField(choices=[('sign_in', '签到'), ('charge', '充值'), ('usage', '使用'), ('admin', '管理员操作'), ('reward', '奖励'), ('refund', '退款')], max_length=20, verbose_name='记录类型')),
                ('description', models.CharField(max_length=255, verbose_name='描述')),
                ('balance', models.IntegerField(verbose_name='变动后余额')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_records', to='chat.message', verbose_name='相关消息')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_records', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '积分记录',
                'verbose_name_plural': '积分记录列表',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChargeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='充值金额')),
                ('credits', models.IntegerField(verbose_name='兑换积分')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('approved', '已通过'), ('rejected', '已拒绝'), ('canceled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('transaction_code', models.CharField(max_length=20, unique=True, verbose_name='交易码')),
                ('payment_method', models.CharField(default='微信支付', max_length=50, verbose_name='支付方式')),
                ('admin_remark', models.TextField(blank=True, null=True, verbose_name='管理员备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charge_records', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '充值记录',
                'verbose_name_plural': '充值记录列表',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TokenPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_price', models.FloatField(default=0.0, verbose_name='输入token价格(积分/1000token)')),
                ('output_price', models.FloatField(default=0.0, verbose_name='输出token价格(积分/1000token)')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='token_prices', to='chat.aimodel', verbose_name='模型')),
            ],
            options={
                'verbose_name': 'Token价格',
                'verbose_name_plural': 'Token价格列表',
                'unique_together': {('model',)},
            },
        ),
    ]
